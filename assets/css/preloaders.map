{
	"version": 3,
	"file": "../scss/preloaders.css",
	"sources": [
		"../scss/preloaders.scss",
		"../scss/_mixins.scss"
	],
	"sourcesContent": [
		"@import 'mixins';\n\n/* preloader starts */\n  \n.preloader-container.enable-preloader .preloader {\nbackground-color: #c8ff32;\nposition: absolute;\nleft: 0;\ntop: 0;\nwidth: 100%;\nheight: 100%;\nz-index: 100;\n@include transitionsm(all,0.5s,cubic-bezier(0.190, 1.000, 0.220, 1.000),0.1s);\n@include displayflex;\n@include justify-content(center);\n@include align-items(center); \n} \n \n.preloader-container .preloader  {\nheight: 0;\nposition: absolute;\nleft: 0;\ntop: 0;\nwidth: 100%;\nz-index: 30;\nbackground-color: #c8ff32;\n@include transitionsm(all,0.6s,cubic-bezier(0.190, 1.000, 0.220, 1.000),0.1s);  \n}\n \n.preloader-container .preloader img { \n@include opacity(0);\n@include animixpropertysm(preloaderfadein,1.5s,linear,0.1s,1,normal,backwards,running);\n}\n\n\n\n\n\n\n/* preloader ends */",
		"/* transition shorthand method  */\r\n@mixin transitionsm ( $property, $duration, $timing-function, $delay ) {\r\n     -webkit-transition:$property $duration $timing-function $delay;\r\n      -moz-transition:$property $duration $timing-function $delay;\r\n       -o-transition:$property $duration $timing-function $delay;\r\n           transition:$property $duration $timing-function $delay;\r\n}\r\n\r\n\r\n/* transition extended method  */\r\n@mixin transitionem( $property, $duration, $timing-function, $delay ) {\r\n-webkit-transition-property:$property;\r\n-moz-transition-property:$property;\r\n-ms-transition-property:$property;\r\n-o-transition-property:$property;\r\ntransition-property:$property;\r\n\r\n-webkit-transition-duration:$duration;\r\n-moz-transition-duration:$duration;\r\n-ms-transition-duration:$duration;\r\n-o-transition-duration:$duration;\r\ntransition-duration:$duration;\r\n\r\n-webkit-transition-timing-function:$timing-function;\r\n-moz-transition-timing-function:$timing-function;\r\n-ms-transition-timing-function:$timing-function;\r\n-o-transition-timing-function:$timing-function;\r\ntransition-timing-function:$timing-function;\r\n\r\n-webkit-transition-delay:$delay;\r\n-moz-transition-delay:$delay;\r\n-ms-transition-delay:$delay;\r\n-o-transition-delay:$delay;\r\ntransition-delay:$delay;\r\n}\r\n\r\n/* Border Radius */\r\n\r\n@mixin border-radius($radius) {\r\n-webkit-border-radius:$radius;\r\n-moz-border-radius:$radius;\r\n-ms-border-radius:$radius;\r\n-o-border-radius:$radius;\r\nborder-radius:$radius;\r\n}\r\n\r\n\r\n/* Opacity */\r\n\r\n@mixin opacity($x) {\r\n\t-webkit-opacity:$x;\r\n\t-moz-opacity:$x;\r\n\t-ms-opacity:$x;\r\n\t-o-opacity:$x;\r\n\topacity:$x;\r\n}\r\n\r\n\r\n/* Box Shadow */\r\n@mixin box-shadow($top, $left, $blur, $color, $inset:\"\") {\r\n-webkit-box-shadow:$top $left $blur $color #{$inset};\r\n-moz-box-shadow:$top $left $blur $color #{$inset};\r\n-ms-box-shadow:$top $left $blur $color #{$inset};\r\n-o-box-shadow:$top $left $blur $color #{$inset};\r\nbox-shadow:$top $left $blur $color #{$inset};\r\n}\r\n\r\n\r\n/* Note: even if we don't declare 'inset' it will work */\r\n\r\n/* 2D Transform (Extended Method) */\r\n\r\n/* Translate: */\r\n\r\n@mixin translate($x,$y) {\r\n-webkit-transform:translate($x,$y);\r\n-moz-transform:translate($x,$y);\r\n-ms-transform:translate($x,$y);\r\n-o-transform:translate($x,$y);\r\ntransform:translate($x,$y);\t\r\n}\r\n\r\n@mixin translates($x,$y) {\r\n-webkit-transform:translateX($x) translateY($y);\r\n-moz-transform:translateX($x) translateY($y);\r\n-ms-transform:translateX($x) translateY($y);\r\n-o-transform:translateX($x) translateY($y);\r\ntransform:translateX($x) translateY($y);\t\r\n}\r\n\r\n@mixin translateY($x) {\r\n-webkit-transform:translateY($x);\r\n-moz-transform:translateY($x);\r\n-ms-transform:translateY($x);\r\n-o-transform:translateY($x);\r\ntransform:translateY($x);\t\r\n}\r\n\r\n@mixin translateY($y) {\r\n-webkit-transform:translateY($y);\r\n-moz-transform:translateY($y);\r\n-ms-transform:translateY($y);\r\n-o-transform:translateY($y);\r\ntransform:translateY($y);\t\r\n}\r\n\r\n@mixin translate3ds($x, $y, $z) {\r\n-webkit-transform:translate3d($x, $y, $z);\r\n-moz-transform:translate3d($x, $y, $z);\r\n-ms-transform:translate3d($x, $y, $z);\r\n-o-transform:translate3d($x, $y, $z);\r\ntransform:translate3d($x, $y, $z);\r\n}\r\n\r\n/* Scale: */\r\n\r\n@mixin scale($x) {\r\n-webkit-transform:scale($x);\r\n-moz-transform:scale($x);\r\n-ms-transform:scale($x);\r\n-o-transform:scale($x);\r\ntransform:scale($x);\r\n}\r\n\r\n\r\n/* Rotate: */\r\n\r\n@mixin rotate($x) {\r\n\t-webkit-transform:rotate($x);\r\n\t-moz-transform:rotate($x);\r\n\t-ms-transform:rotate($x);\r\n\t-o-transform:rotate($x);\r\n\ttransform:rotate($x);\t\r\n}\r\n\r\n/* 2D Transform (Short Cut Method) */\r\n\r\n\r\n@mixin transform($transforms) {\r\n\t-webkit-transform: $transforms;\r\n\t-moz-transform: $transforms;\r\n\t-ms-transform: $transforms;\r\n\ttransform: $transforms;\r\n}\r\n\r\n/* Rotate */\r\n@mixin rotate ($deg) { \r\n\t@include transform(rotate(#{$deg}deg));\r\n}\r\n\r\n/* Scale */\r\n@mixin scale($scale) {\r\n\t@include transform(scale($scale));\r\n}\r\n\r\n/* Translate */\r\n@mixin translate ($x, $y) {\r\n\t@include transform(translate($x, $y));\r\n}\r\n\r\n/* Skew */\r\n@mixin skew ($x, $y) {\r\n\t@include transform(skew(#{$x}deg, #{$y}deg));\r\n}\r\n\r\n/* Transform Origin */\r\n@mixin transform-origin ($origin) {\r\n    \t-webkit-transform-origin: $origin;\r\n    \t-moz-transform-origin: $origin;\r\n\t-ms-transform-origin: $origin;\r\n\ttransform-origin: $origin;\r\n}\r\n\r\n\r\n/* CSS3 Animation Mixin Implementation Example */\r\n\r\n@mixin globalanimixin($name) {\r\n\r\n    @-webkit-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @-moz-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @-ms-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @-o-keyframes #{$name} {\r\n        @content;\r\n    }\r\n    @keyframes #{$name} {\r\n        @content;\r\n    }\r\n}\r\n\r\n/* Method:1 (Shorthand Method) */\r\n\r\n@mixin animixpropertysm ( $name, $duration, $timing, $delay, $direction, $iteration, $fillmode, $playstate )  {\r\n\t-webkit-animation: $name $duration $timing $delay $direction $iteration $fillmode $playstate;\r\n\t-moz-animation: $name $duration $timing $delay $direction $iteration $fillmode $playstate;\r\n\t-o-animation: $name $duration $timing $delay $direction $iteration $fillmode $playstate;\r\n\tanimation: $name $duration $timing $delay $direction $iteration $fillmode $playstate;\r\n}\r\n\r\n/* Method:2 (Extended Method) */\r\n\r\n@mixin animixpropertyem ( $name, $duration, $timing, $delay, $fillmode )  {\t\r\n\t\r\n-webkit-animation-name: $name;\r\n-moz-animation-name: $name;\r\n-o-animation-name: $name;\r\n-ms-animation-name: $name;\r\nanimation-name: $name;\r\n\t\r\n-webkit-animation-duration: $duration;\r\n-moz-animation-duration: $duration;\r\n-o-animation-duration: $duration;\r\n-ms-animation-duration: $duration;\r\nanimation-duration: $duration;\r\n\t\r\n-webkit-animation-timing-function: $timing;\r\n-moz-animation-timing-function: $timing;\r\n-o-animation-timing-function: $timing;\r\n-ms-animation-timing-function: $timing;\r\nanimation-timing-function: $timing;\r\n\t\t\t\t\t\t\t\t\t\t\r\n-webkit-animation-delay: $delay;\r\n-moz-animation-delay: $delay;\r\n-o-animation-delay: $delay;\r\n-ms-animation-delay: $delay;\r\nanimation-delay: $delay;\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n-webkit-animation-fill-mode: $fillmode;\r\n-moz-animation-fill-mode: $fillmode;\r\n-o-animation-fill-mode: $fillmode;\r\n-ms-animation-fill-mode: $fillmode;\r\nanimation-fill-mode: $fillmode;\t\t\t\t\t\t\t\t\t\r\n\r\n}\r\n\r\n/* Flexbox SASS mixins */\r\n\r\n/* Flexbox display */\r\n\r\n@mixin displayflex {\r\n  display: -webkit-flex;\r\n  display: -moz-flex;\r\n  display: -ms-flex;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n}\r\n\r\n// The 'flex' shorthand\r\n// - applies to: flex items\r\n// <positive-number>, initial, auto, or none\r\n\r\n@mixin flex($values) {\r\n  -webkit-box-flex: $values;\r\n     -moz-box-flex: $values;\r\n      -webkit-flex: $values;\r\n  \t  -ms-flex: $values;\r\n  \t      flex: $values;\r\n}\r\n\r\n// Flex Flow Direction\r\n// - applies to: flex containers\r\n// row | row-reverse | column | column-reverse\r\n\r\n@mixin flex-direction($direction) {\r\n  -webkit-flex-direction: $direction;\r\n     -moz-flex-direction: $direction;\r\n      -ms-flex-direction: $direction;\r\n          flex-direction: $direction;\r\n}\r\n\r\n// Flex Line Wrapping\r\n// - applies to: flex containers\r\n// nowrap | wrap | wrap-reverse\r\n\r\n@mixin flex-wrap($wrap) {\r\n  -webkit-flex-wrap: $wrap;\r\n     -moz-flex-wrap: $wrap;\r\n      -ms-flex-wrap: $wrap;\r\n          flex-wrap: $wrap;\r\n}\r\n\r\n// Flex Direction and Wrap\r\n// - applies to: flex containers\r\n// <flex-direction> || <flex-wrap>\r\n\r\n@mixin flex-flow($flow) {\r\n  -webkit-flex-flow: $flow;\r\n     -moz-flex-flow: $flow;\r\n      -ms-flex-flow: $flow;\r\n          flex-flow: $flow;\r\n}\r\n\r\n// Display Order\r\n// - applies to: flex items\r\n// <integer>\r\n\r\n@mixin order($val) {\r\n  -webkit-box-ordinal-group: $val;  \r\n     -moz-box-ordinal-group: $val;     \r\n  \t     -ms-flex-order: $val;     \r\n  \t      -webkit-order: $val;  \r\n  \t\t      order: $val;\r\n}\r\n\r\n// Flex grow factor\r\n// - applies to: flex items\r\n// <number>\r\n\r\n@mixin flex-grow($grow) {\r\n  -webkit-flex-grow: $grow;\r\n     -moz-flex-grow: $grow;\r\n      -ms-flex-grow: $grow;\r\n          flex-grow: $grow;\r\n}\r\n\r\n// Flex shrink\r\n// - applies to: flex item shrink factor\r\n// <number> \r\n\r\n@mixin flex-shrink($shrink) {\r\n  -webkit-flex-shrink: $shrink;\r\n     -moz-flex-shrink: $shrink;\r\n      -ms-flex-shrink: $shrink;\r\n          flex-shrink: $shrink;\r\n}\r\n\r\n// Flex basis\r\n// - the initial main size of the flex item\r\n// - applies to: flex itemsnitial main size of the flex item\r\n// <width> \r\n\r\n@mixin flex-basis($width) {\r\n  -webkit-flex-basis: $width;\r\n     -moz-flex-basis: $width;\r\n      -ms-flex-basis: $width;\r\n          flex-basis: $width;\r\n}\r\n\r\n// Axis Alignment\r\n// - applies to: flex containers\r\n// flex-start | flex-end | center | space-between | space-around \r\n\r\n@mixin justify-content($justify) {\r\n  -webkit-justify-content: $justify;\r\n     -moz-justify-content: $justify;\r\n      -ms-justify-content: $justify;\r\n          justify-content: $justify;\r\n            -ms-flex-pack: $justify;\r\n}\r\n\r\n// Packing Flex Lines\r\n// - applies to: multi-line flex containers\r\n// flex-start | flex-end | center | space-between | space-around | stretch \r\n\r\n@mixin align-content($align) {\r\n  -webkit-align-content: $align;\r\n     -moz-align-content: $align;\r\n      -ms-align-content: $align;\r\n          align-content: $align;\r\n}\r\n\r\n// Cross-axis Alignment\r\n// - applies to: flex containers\r\n// flex-start | flex-end | center | baseline | stretch \r\n\r\n@mixin align-items($align) {\r\n  -webkit-align-items: $align;\r\n     -moz-align-items: $align;\r\n      -ms-align-items: $align;\r\n          align-items: $align;\r\n}\r\n\r\n// Cross-axis Alignment\r\n// - applies to: flex items\r\n// auto | flex-start | flex-end | center | baseline | stretch \r\n\r\n@mixin align-self($align) {\r\n  -webkit-align-self: $align;\r\n     -moz-align-self: $align;\r\n      -ms-align-self: $align;\r\n          align-self: $align;\r\n}\r\n\r\n/*  gradient */\r\n\r\n\r\n/* linear gradient base */\r\n@mixin linear-gradient( $colorone, $colortwo) { \r\n  background: -webkit-linear-gradient($colorone, $colortwo);\r\n  background: -moz-linear-gradient($colorone, $colortwo);\r\n  background: -o-linear-gradient($colorone, $colortwo);\r\n  background: linear-gradient($colorone, $colortwo);  \r\n}\r\n\r\n/* linear gradient left to right */\r\n@mixin linear-gradient-left-to-right ( $lefttoright, $colorone, $colortwo) { \r\n  background: -webkit-linear-gradient($lefttoright, $colorone, $colortwo);\r\n  background: -moz-linear-gradient($lefttoright, $colorone, $colortwo);\r\n  background: -o-linear-gradient($lefttoright, $colorone, $colortwo);\r\n  background: linear-gradient($lefttoright, $colorone, $colortwo);  \r\n}\r\n\r\n"
	],
	"mappings": "ACAA,kCAAkC;AASlC,iCAAiC;AA2BjC,mBAAmB;AAWnB,aAAa;AAWb,gBAAgB;AAUhB,yDAAyD;AAEzD,oCAAoC;AAEpC,gBAAgB;AA0ChB,YAAY;AAWZ,aAAa;AAUb,qCAAqC;AAUrC,YAAY;AAKZ,WAAW;AAKX,eAAe;AAKf,UAAU;AAKV,sBAAsB;AAStB,iDAAiD;AAqBjD,iCAAiC;AASjC,gCAAgC;AAoChC,yBAAyB;AAEzB,qBAAqB;AAkJrB,eAAe;AAGf,0BAA0B;AAQ1B,mCAAmC;AD7YnC,sBAAsB;;AAEtB,AAAsC,oBAAlB,AAAA,iBAAiB,CAAC,UAAU,CAAC;EACjD,gBAAgB,EAAE,OAAQ;EAC1B,QAAQ,EAAE,QAAS;EACnB,IAAI,EAAE,CAAE;EACR,GAAG,EAAE,CAAE;EACP,KAAK,EAAE,IAAK;EACZ,MAAM,EAAE,IAAK;EACb,OAAO,EAAE,GAAI;ECTR,kBAAkB,EDUD,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECTtE,eAAe,EDSC,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECRrE,aAAa,EDQE,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECPjE,UAAU,EDOC,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECyO1E,OAAO,EAAE,YAAa;EACtB,OAAO,EAAE,SAAU;EACnB,OAAO,EAAE,QAAS;EAClB,OAAO,EAAE,YAAa;EACtB,OAAO,EAAE,IAAK;EAmGd,uBAAuB,ED9UA,MAAM;EC+U1B,oBAAoB,ED/UA,MAAM;ECgVzB,mBAAmB,EDhVA,MAAM;ECiVrB,eAAe,EDjVA,MAAM;ECkVnB,aAAa,EDlVA,MAAM;ECqW7B,mBAAmB,EDpWA,MAAM;ECqWtB,gBAAgB,EDrWA,MAAM;ECsWrB,eAAe,EDtWA,MAAM;ECuWjB,WAAW,EDvWA,MAAM;CAC1B;;;AAED,AAAqB,oBAAD,CAAC,UAAU,CAAE;EACjC,MAAM,EAAE,CAAE;EACV,QAAQ,EAAE,QAAS;EACnB,IAAI,EAAE,CAAE;EACR,GAAG,EAAE,CAAE;EACP,KAAK,EAAE,IAAK;EACZ,OAAO,EAAE,EAAG;EACZ,gBAAgB,EAAE,OAAQ;ECvBrB,kBAAkB,EDwBD,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECvBtE,eAAe,EDuBC,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECtBrE,aAAa,EDsBE,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;ECrBjE,UAAU,EDqBC,GAAG,CAAC,IAAI,CAAC,8BAAY,CAA6B,IAAI;CAC3E;;;AAED,AAAgC,oBAAZ,CAAC,UAAU,CAAC,GAAG,CAAC;ECqBnC,eAAe,EDpBC,CAAC;ECqBjB,YAAY,EDrBI,CAAC;ECsBjB,WAAW,EDtBK,CAAC;ECuBjB,UAAU,EDvBM,CAAC;ECwBjB,OAAO,EDxBS,CAAC;ECwKjB,iBAAiB,EDvKQ,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;ECwKpF,cAAc,EDxKW,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;ECyKpF,YAAY,EDzKa,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;EC0KpF,SAAS,ED1KgB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;CACpF;;AAOD,oBAAoB",
	"names": []
}